<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd">

    <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"
          depends-on="lifecycleBeanPostProcessor" />

    <!-- 配置 Bean 后置处理器: 会自动的调用和 Spring 整合后各个组件的生命周期方法. -->
    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />


    <!-- shiro-cache -->
    <bean id="redisManager" class="org.crazycake.shiro.RedisManager">
        <property name="jedisPool" ref="jedisPool"></property>
        <property name="jedisPoolConfig" ref="jedisPoolConfig"></property>
    </bean>

    <bean id="shiroCacheManager" class="org.crazycake.shiro.RedisCacheManager">
        <property name="redisManager" ref="redisManager"></property>
        <!-- 设置前缀-->
        <property name="keyPrefix" value="SSM_CACHE:"></property>
        <!-- shiro-redis will call  to get the id for storing Redis object.用户登录对象的主键  -->
        <property name="principalIdFieldName" value="id" />
    </bean>

    <!-- 配置RedisSessionDAO shiro sessionDao层的实现 -->
    <bean id="redisSessionDAO" class="org.crazycake.shiro.RedisSessionDAO">
        <property name="redisManager" ref="redisManager"></property>
    </bean>

    <!-- 开启shiro注解支持 -->
    <bean
            class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
        <property name="securityManager" ref="securityManager" />
    </bean>

   <!--自定义认证和授权 -->
    <bean id="myRealm" class="com.hxzy.common.shiro.MyRealm" >
        <property name="cachingEnabled" value="false"/>
        <property name="userService" ref="userServiceImpl"></property>
        <property name="credentialsMatcher" ref="hxzyCredentialsMatcher"></property>
    </bean>

    <!-- 自定义密码验证规则-->
    <bean id="hxzyCredentialsMatcher" class="com.hxzy.common.shiro.WisezoneCredentialsMatcher">
    </bean>

    <!-- session会话管理器 -->
    <bean id="sessionManager"
          class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
        <!-- session失效时间 30分钟，单位毫秒 -->
        <property name="globalSessionTimeout" value="18000000" />
        <!-- 删除失效的session -->
        <property name="deleteInvalidSessions" value="true" />
        <property name="sessionDAO" ref="redisSessionDAO" />
    </bean>

    <!-- 安全管理器 -->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <property name="realm" ref="myRealm" />
        <!-- 记住我 -->
        <property name="rememberMeManager" ref="rememberMeManager" />
        <!-- 注入缓存管理器 -->
        <property name="cacheManager" ref="shiroCacheManager" />
        <!-- 注入session管理器 -->
        <property name="sessionManager" ref="sessionManager" />
    </bean>


    <!-- rememberMeManager管理器，写cookie，取出cookie生成用户信息 -->
    <!-- sessionIdCookie：maxAge=-1表示浏览器关闭时失效此Cookie -->
    <bean id="sessionIdCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
        <constructor-arg value="rememberMe"/>
        <property name="httpOnly" value="true"/>
        <property name="maxAge" value="-1"/>
    </bean>

    <!-- 用户信息记住我功能的相关配置 -->
    <bean id="rememberMeCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
        <constructor-arg value="rememberMe"/>
        <property name="httpOnly" value="true"/>
        <!-- 配置存储rememberMe Cookie的domain为 一级域名		这里如果配置需要和Session回话一致更好。-->
        <property name="maxAge" value="604800"/><!-- 记住我==保留Cookie有效7天 -->
    </bean>

    <!-- rememberMe管理器 -->
    <bean id="rememberMeManager" class="org.apache.shiro.web.mgt.CookieRememberMeManager">
        <!-- rememberMe cookie加密的密钥 建议每个项目都不一样 默认AES算法 密钥长度（128 256 512 位）-->
        <property name="cipherKey"
                  value="#{T(org.apache.shiro.codec.Base64).decode('3AvVhmFLUs0KTA3Kprsdag==')}"/>
        <property name="cookie" ref="rememberMeCookie"/>
    </bean>




    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <!--shiro 核心安全接口  -->
        <property name="securityManager" ref="securityManager"></property>
        <!--登录时的连接  -->
        <property name="loginUrl" value="/admin/manage/login"></property>
        <!--未授权时跳转的连接  -->
        <property name="unauthorizedUrl" value="/admin/manage/unauthorized"></property>

        <!-- 读取初始自定义权限内容-->
        <!-- 如果使用authc验证,需重写实现rememberMe的过滤器,或配置formAuthenticationFilter的Bean -->
        <property name="filterChainDefinitions">
            <value>
                /static/**=anon
                /admin/manage/login=anon
                /admin/manage/unauthorized=anon
                /admin/**=authc
            </value>
        </property>
    </bean>


    <!-- 相当于调用SecurityUtils.setSecurityManager(securityManager) -->
    <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="staticMethod" value="org.apache.shiro.SecurityUtils.setSecurityManager"/>
        <property name="arguments" ref="securityManager"/>
    </bean>



    <!-- 强制踢出，只允许一个用户登录-->
    <bean id="kickoutSessionControlFilter" class="com.hxzy.common.shiro.KickoutSessionControlFilter">
        <property name="jedisUtil"  ref="jedisUtil"></property>
    </bean>

</beans>